apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kgs-1-db-data
  namespace: staging
  labels:
    volume: db-data
    app: kgs
    id: "1"
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 800M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: staging
  name: kgs-1
  labels:
    app: kgs
    id: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kgs
      id: "1"
  template:
    metadata:
      labels:
        app: kgs
        id: "1"
    spec:
      containers:
        - name: kgs
          image: byliuyang/kgs-staging:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: certs
              mountPath: "/etc/certs"
              readOnly: true
          args:
            - ./scripts/wait-for-it
            - -s
            - -t
            - "0"
            - localhost:5432
            - --
            - ./build/app
            - start
            - --migration
            - app/adapter/db/migration
          env:
            - name: DB_HOST
              value: localhost
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: kgs-1-db
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kgs-1-db
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: kgs-1-db
                  key: name
            - name: ENABLE_ENCRYPTION
              value: "true"
            - name: CERT_FILE_PATH
              value: /etc/certs/tls.crt
            - name: KEY_FILE_PATH
              value: /etc/certs/tls.key
            - name: GRPC_API_PORT
              value: "8080"
            - name: SEND_GRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: send-grid
                  key: api-key
            - name: SERVICE_NAME
              value: kgs-1
            - name: SERVICE_EMAIL
              value: kgs@staging.short-d.com
        - name: db
          image: postgres:12
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: kgs-1-db-data

          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: kgs-1-db
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kgs-1-db
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: kgs-1-db
                  key: name
      volumes:
        - name: certs
          secret:
            secretName: short-d.com-tls
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
        - name: kgs-1-db-data
          persistentVolumeClaim:
            claimName: kgs-1-db-data
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: staging
  name: kgs-1
spec:
  selector:
    app: kgs
    id: "1"
  ports:
    - name: grpc
      port: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: staging
  name: kgs1
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
spec:
  tls:
    - hosts:
        - kgs1-staging.short-d.com
      secretName: short-d.com-tls
  rules:
    - host: kgs1-staging.short-d.com
      http:
        paths:
          - backend:
              serviceName: kgs-1
              servicePort: grpc
